{"version":3,"sources":["views/images/mainchain_white.png","views/images/did_white.png","views/images/carrier_white.png","views/widgets/Widget02.js","views/widgets/Widget04.js","views/Dashboard.js"],"names":["module","exports","Widget02","this","props","className","cssModule","header","icon","mainText","color","variant","footer","link","children","padding","card","lead","style","classes","mapToCssModules","classNames","Card","backgroundColor","marginBottom","CardBody","paddingLeft","src","widht","height","paddingRight","display","fontSize","fontWeight","Component","Widget04","value","invert","attributes","progress","bgColor","defaultProps","Dashboard","state","blocktime","blockhash","miner","latestNbOfTx","latestSize","blockheight","blockheightDid","blocktimeDid","blockhashDid","minerDid","latestNbOfTxDid","latestSizeDid","carrierIp","dropdownOpen","radioSelected","isMobile","console","log","backend","latestBlock","then","responseJson","nodeinfo","JSON","parse","nodeinfoDid","nodeinfodid","blockSizes","blockSizeList","blockTime","Intl","DateTimeFormat","year","month","day","hour","minute","second","format","Date","blockHash","blockHashFormatted","substring","blockMiner","blockSizeListDid","blockTimeDid","blockHashDid","blockHashFormattedDid","blockMinerDid","serviceStatus","elaRunning","didRunning","carrierRunning","tokenRunning","nbOfTx","setState","result","nbOfTxList","nbOfTxListDid","cardChartData1","labels","datasets","data","cardChartOpts1","tooltips","enabled","maintainAspectRatio","legend","scales","xAxes","gridLines","zeroLineColor","ticks","fontColor","yAxes","min","Math","apply","max","elements","line","borderWidth","borderColor","fill","point","radius","hitRadius","hoverRadius","cardChartData2","cardChartOpts2","cardChartData3","cardChartOpts3","cardChartData4","cardChartOpts4","id","width","undefined","Row","Col","xs","sm","lg","mainchainLogo","CardGroup","options","ButtonGroup","paddingTop","didLogo","carrierLogo","React"],"mappings":"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","file":"static/js/12.f4278b38.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/mainchain_white.c2b8e1ee.png\";","module.exports = __webpack_public_path__ + \"static/media/did_white.f0e354b6.png\";","module.exports = __webpack_public_path__ + \"static/media/carrier_white.fcb87bbd.png\";","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { Card, CardBody, CardFooter } from 'reactstrap';\nimport classNames from 'classnames';\nimport { mapToCssModules } from 'reactstrap/lib/utils';\n\nconst propTypes = {\n  header: PropTypes.string,\n  mainText: PropTypes.string,\n  icon: PropTypes.string,\n  color: PropTypes.string,\n  variant: PropTypes.string,\n  footer: PropTypes.bool,\n  link: PropTypes.string,\n  children: PropTypes.node,\n  className: PropTypes.string,\n  cssModule: PropTypes.object,\n};\n\nclass Widget02 extends Component {\n  render() {\n    const { className, cssModule, header, mainText, icon, color, footer, link, children, variant, ...attributes } = this.props;\n\n    //demo purposes only\n    const padding = (variant === '0' ? { card: 'p-3', icon: 'p-3', lead: 'mt-2' } : (variant === '1' ? {\n      card: 'p-0', icon: 'p-4', lead: 'pt-3',\n    } : { card: 'p-0', icon: 'p-4 px-5', lead: 'pt-3' }));\n\n    const card = { style: 'clearfix', color: color, icon: icon, classes: '' };\n    card.classes = mapToCssModules(classNames(className, card.style, padding.card), cssModule);\n\n    const lead = { style: 'h5 mb-0', color: color, classes: '' };\n    lead.classes = classNames(lead.style, 'text-' + card.color, padding.lead);\n\n    const blockIcon = function (icon) {\n      const classes = classNames(icon, 'bg-' + card.color, padding.icon, 'font-2xl mr-3 float-left');\n      return (<i className={classes}></i>);\n    };\n\n    const cardFooter = function () {\n      if (footer) {\n        return (\n          <CardFooter className=\"px-3 py-2\">\n            <a className=\"font-weight-bold font-xs btn-block text-muted\" href={link}>View More\n              <i className=\"fa fa-angle-right float-right font-lg\"></i></a>\n          </CardFooter>\n        );\n      }\n    };\n\n    return (\n      <Card style={{backgroundColor: '#272A3D', marginBottom: '20px'}} >\n        <CardBody>\n          <div style={{paddingLeft: '20px', color:'white'}}>\n            <img src={card.icon} style={{widht:'60px', height:'60px', paddingRight: '20px'}}></img>\n            {color == 'success'?\n              <p style={{display:'inline', color:'lightgreen', fontSize: '4', fontWeight:'bold'}}>{header}</p>\n            :\n              <p style={{display:'inline',color:'red', fontSize: '14pt', fontWeight:'bold'}}>{header}</p>\n            }\n          </div>\n        </CardBody>\n      </Card>\n    );\n  }\n}\n\nWidget02.propTypes = propTypes;\n\nexport default Widget02;","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { Card, CardBody, Progress } from 'reactstrap';\nimport classNames from 'classnames';\nimport { mapToCssModules } from 'reactstrap/lib/utils';\n\nconst propTypes = {\n  header: PropTypes.string,\n  icon: PropTypes.string,\n  color: PropTypes.string,\n  value: PropTypes.string,\n  children: PropTypes.node,\n  className: PropTypes.string,\n  cssModule: PropTypes.object,\n  invert: PropTypes.bool,\n};\n\nconst defaultProps = {\n  header: '87.500',\n  icon: 'icon-people',\n  color: 'info',\n  value: '25',\n  children: 'Visitors',\n  invert: false,\n};\n\nclass Widget04 extends Component {\n  render() {\n    const { className, cssModule, header, icon, color, value, children, invert, ...attributes } = this.props;\n\n    // demo purposes only\n    const progress = { style: '', color: color, value: value };\n    const card = { style: '', bgColor: '', icon: icon };\n\n    if (invert) {\n      progress.style = 'progress-white';\n      progress.color = '';\n      card.style = 'text-white';\n      card.bgColor = 'bg-' + color;\n    }\n\n    const classes = mapToCssModules(classNames(className, card.style, card.bgColor), cssModule);\n    progress.style = classNames('progress-xs mt-3 mb-0', progress.style);\n\n    return (\n      <Card className={classes} {...attributes} style={{backgroundColor: '#272A3D'}}>\n        <CardBody>\n          {/* <div className=\"h1 text-muted text-right mb-2\">\n            <i className={card.icon}></i>\n          </div> */}\n          <small className=\"text-muted text-uppercase font-weight-bold\">{children}</small>\n          <div className=\"h4 mb-0 text-white\">{header}</div>\n          {/* <Progress className={progress.style} color={progress.color} value={progress.value} /> */}\n        </CardBody>\n      </Card>\n    );\n  }\n}\n\nWidget04.propTypes = propTypes;\nWidget04.defaultProps = defaultProps;\n\nexport default Widget04;","import React from \"react\";\nimport { Bar, Line } from \"react-chartjs-2\";\nimport {\n  ButtonGroup,\n  CardBody,\n  Col,\n  Row,\n  Card,\n  CardGroup\n} from \"reactstrap\";\nimport Widget02 from './widgets/Widget02';\nimport Widget04 from './widgets/Widget04';\nimport mainchainLogo from './images/mainchain_white.png'\nimport didLogo from './images/did_white.png'\nimport carrierLogo from './images/carrier_white.png'\nimport backend from \"../api/backend\"\n\n\nclass Dashboard extends React.Component {\n\n  constructor(props) {\n    super(props);\n\n    // this.toggle = this.toggle.bind(this);\n    // this.onRadioBtnClick = this.onRadioBtnClick.bind(this);\n\n    this.state = {\n      blocktime: \"...\",\n      blockhash: '...',\n      miner: '...',\n      latestNbOfTx: 0,\n      latestSize: 0,\n      blockheight: 0,\n\n      blockheightDid: 0,\n      blocktimeDid: \"...\",\n      blockhashDid: '...',\n      minerDid: '...',\n      latestNbOfTxDid: 0,\n      latestSizeDid: 0,\n      carrierIp: '',\n\n      dropdownOpen: false,\n      radioSelected: 2,\n      isMobile: props.isMobile,\n\n    };\n  }\n\n\n  componentDidMount() {\n    console.log(\"componentDidMount\")\n    backend.latestBlock()\n      .then(responseJson => {\n        console.log(\"componentDidMount1\")\n\n        let nodeinfo = JSON.parse(responseJson.nodeinfo);\n        let nodeinfoDid = JSON.parse(responseJson.nodeinfodid);\n        backend.blockSizes()\n          .then(responseJson => {\n            console.log(\"componentDidMount2\")\n\n            // mainchain\n            let blockSizeList = responseJson.blockSizeList\n            let blockTime = new Intl.DateTimeFormat('en-US', { year: 'numeric', month: '2-digit', day: '2-digit', hour: '2-digit', minute: '2-digit', second: '2-digit' }).format(new Date(responseJson.blockTime * 1000));\n            let blockHash = responseJson.blockHash;\n            let blockHashFormatted = blockHash.substring(0, 9) + \"...\" + blockHash.substring(54, 64);\n            let blockMiner = responseJson.miner;\n            // DID\n            let blockSizeListDid = responseJson.blockSizeListDid\n            let blockTimeDid = new Intl.DateTimeFormat('en-US', { year: 'numeric', month: '2-digit', day: '2-digit', hour: '2-digit', minute: '2-digit', second: '2-digit' }).format(new Date(responseJson.blockTimeDid * 1000));\n            let blockHashDid = responseJson.blockHashDid;\n            let blockHashFormattedDid = blockHashDid.substring(0, 9) + \"...\" + blockHashDid.substring(54, 64);\n            let blockMinerDid = responseJson.minerDid;\n\n            backend.serviceStatus()\n              .then(responseJson => {\n                console.log(\"componentDidMount3\")\n\n                console.log(blockMiner)\n                let elaRunning = responseJson.elaRunning;\n                let didRunning = responseJson.didRunning;\n                let carrierRunning = responseJson.carrierRunning;\n                let tokenRunning = responseJson.tokenRunning;\n                let carrierIp = responseJson.carrierIp\n                console.log(\"Carrier\", carrierIp)\n                backend.nbOfTx()\n                  .then(responseJson => {\n\n                    this.setState({ blockheight: nodeinfo.result, blockheightDid: nodeinfoDid.result, blocktime: blockTime, blocktimeDid: blockTimeDid, blockSizeList: blockSizeList, blockSizeListDid: blockSizeListDid, blockhash: blockHashFormatted, blockhashDid: blockHashFormattedDid, miner: blockMiner, minerDid: blockMinerDid, latestSize: blockSizeList[9], latestSizeDid: blockSizeListDid[9], nbOfTxList: responseJson.nbOfTxList, latestNbOfTx: responseJson.nbOfTxList[9], nbOfTxListDid: responseJson.nbOfTxListDid, latestNbOfTxDid: responseJson.nbOfTxListDid[9], elaRunning, didRunning, carrierRunning, tokenRunning, carrierIp })\n                  });\n              });\n          });\n      });\n  }\n\n  render() {\n\n\n\n\n    var cardChartData1 = {\n      labels: [\"       \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \"       \"],\n      datasets: [{ data: this.state.blockSizeList }]\n    };\n\n    var cardChartOpts1 = {\n      tooltips: {\n        enabled: true,\n      },\n      maintainAspectRatio: false,\n      legend: {\n        display: false\n      },\n      scales: {\n        xAxes: [\n          {\n            gridLines: {\n              color: \"transparent\",\n              zeroLineColor: \"transparent\"\n            },\n            ticks: {\n              fontSize: 2,\n              fontColor: \"transparent\"\n            }\n          }\n        ],\n        yAxes: [\n          {\n            display: false,\n            ticks: {\n              display: false,\n              min: Math.min.apply(Math, cardChartData1.datasets[0].data) - 1000,\n              max: Math.max.apply(Math, cardChartData1.datasets[0].data) + 1000\n            }\n          }\n        ]\n      },\n      elements: {\n        line: {\n          borderWidth: 2,\n          borderColor: '#2C71F6',\n          fill: false\n        },\n        point: {\n          radius: 4,\n          backgroundColor: '#2C71F6',\n          hitRadius: 10,\n          hoverRadius: 6\n        }\n      }\n    };\n\n\n    // Card Chart 2\n    const cardChartData2 = {\n      labels: [\"       \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \"       \"],\n      datasets: [{ data: this.state.nbOfTxList }]\n    };\n\n    const cardChartOpts2 = {\n      tooltips: {\n        enabled: true,\n      },\n      maintainAspectRatio: false,\n      legend: {\n        display: false\n      },\n      scales: {\n        xAxes: [\n          {\n            gridLines: {\n              color: \"transparent\",\n              zeroLineColor: \"transparent\"\n            },\n            ticks: {\n              fontSize: 2,\n              fontColor: \"transparent\"\n            }\n          }\n        ],\n        yAxes: [\n          {\n            display: false,\n            ticks: {\n              display: false,\n              min: Math.min.apply(Math, cardChartData2.datasets[0].data) - 5,\n              max: Math.max.apply(Math, cardChartData2.datasets[0].data) + 5\n            }\n          }\n        ]\n      },\n      elements: {\n        line: {\n          borderWidth: 2,\n          borderColor: '#2C71F6',\n          fill: false\n        },\n        point: {\n          radius: 4,\n          backgroundColor: '#2C71F6',\n          hitRadius: 10,\n          hoverRadius: 6\n        }\n      }\n    };\n\n\n    // Card Chart 2\n    const cardChartData3 = {\n      labels: [\"       \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \"       \"],\n      datasets: [{ data: this.state.blockSizeListDid }]\n    };\n\n    const cardChartOpts3 = {\n      tooltips: {\n        enabled: true,\n      },\n      maintainAspectRatio: false,\n      legend: {\n        display: false\n      },\n      scales: {\n        xAxes: [\n          {\n            gridLines: {\n              color: \"transparent\",\n              zeroLineColor: \"transparent\"\n            },\n            ticks: {\n              fontSize: 2,\n              fontColor: \"transparent\"\n            }\n          }\n        ],\n        yAxes: [\n          {\n            display: false,\n            ticks: {\n              display: false,\n              min: Math.min.apply(Math, cardChartData3.datasets[0].data) - 5,\n              max: Math.max.apply(Math, cardChartData3.datasets[0].data) + 5\n            }\n          }\n        ]\n      },\n      elements: {\n        line: {\n          borderWidth: 2,\n          borderColor: '#D048B6',\n          fill: false\n        },\n        point: {\n          radius: 4,\n          backgroundColor: '#D048B6',\n          hitRadius: 10,\n          hoverRadius: 6\n        }\n      }\n    };\n\n\n    // Card Chart 2\n    const cardChartData4 = {\n      labels: [\"       \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \"       \"],\n      datasets: [{ data: this.state.nbOfTxListDid }]\n    };\n\n    const cardChartOpts4 = {\n      tooltips: {\n        enabled: true,\n      },\n      maintainAspectRatio: false,\n      legend: {\n        display: false\n      },\n      scales: {\n        xAxes: [\n          {\n            gridLines: {\n              color: \"transparent\",\n              zeroLineColor: \"transparent\"\n            },\n            ticks: {\n              fontSize: 2,\n              fontColor: \"transparent\"\n            }\n          }\n        ],\n        yAxes: [\n          {\n            display: false,\n            ticks: {\n              display: false,\n              min: Math.min.apply(Math, cardChartData4.datasets[0].data) - 5,\n              max: Math.max.apply(Math, cardChartData4.datasets[0].data) + 5\n            }\n          }\n        ]\n      },\n      elements: {\n        line: {\n          borderWidth: 2,\n          borderColor: '#D048B6',\n          fill: false\n        },\n        point: {\n          radius: 4,\n          backgroundColor: '#D048B6',\n          hitRadius: 10,\n          hoverRadius: 6\n        }\n      }\n    };\n    const { isMobile } = this.props;\n\n    return (\n      <div id='main' style={{\n        ...{\n          paddingLeft: \"18%\",\n          width: \"100%\",\n          backgroundColor: \"#1E1E26\",\n        },\n        ...(isMobile && { paddingLeft: undefined }),\n      }}\n        className=\"animated fadeIn w3-container\">\n        <Row>\n          <Col xs=\"12\" sm=\"4\" lg=\"4\">\n            {this.state.elaRunning\n              ? <Widget02 header=\"ELA\" mainText=\"Running\" icon={mainchainLogo} color=\"success\" variant=\"1\" />\n              : <Widget02 header=\"ELA\" mainText=\"Stopped\" icon={mainchainLogo} color=\"danger\" variant=\"1\" />\n            }\n          </Col>\n        </Row>\n\n        <CardGroup className=\"mb-4\">\n          <Widget04 icon=\"fa fa-gears\" header={this.state.blockheight} >Best block</Widget04>\n          <Widget04 icon=\"fa fa-clock-o\" header={this.state.blocktime} >Block Time</Widget04>\n          <Widget04 icon=\"fa fa-hashtag\" header={this.state.blockhash} >Block Hash</Widget04>\n          <Widget04 icon=\"fa fa-gears\" header={this.state.miner}>MINER</Widget04>\n        </CardGroup>\n\n        <Row>\n          <Col xs=\"12\" sm=\"6\" lg=\"6 \">\n            <Card className=\"text-white\" style={{ backgroundColor: '#272A3D' }}>\n              <CardBody className=\"pb-0\">\n                <div>Transactions per block</div>\n                <div className=\"text-value\">{this.state.latestNbOfTx}</div>\n              </CardBody>\n              <div className=\"chart-wrapper mx-3\" style={{ height: \"70px\" }}>\n                <Line\n                  data={cardChartData2}\n                  options={cardChartOpts2}\n                  height={70}\n                />\n              </div>\n            </Card>\n          </Col>\n\n          <Col xs=\"12\" sm=\"6\" lg=\"6\">\n            <Card className=\"text-white\" style={{ backgroundColor: '#272A3D' }}>\n              <CardBody className=\"pb-0\">\n                <ButtonGroup className=\"float-right\">\n                </ButtonGroup>\n                <div>Latest block size</div>\n                <div className=\"text-value\">{this.state.latestSize}</div>\n                {/* <div>Latest block sizes</div> */}\n              </CardBody>\n              <div className=\"chart-wrapper mx-3\" style={{ height: \"70px\" }}>\n                <Line\n                  data={cardChartData1}\n                  options={cardChartOpts1}\n                  height={70}\n                />\n              </div>\n            </Card>\n          </Col>\n        </Row>\n\n\n        <Row style={{ paddingTop: '50px' }}>\n          <Col xs=\"12\" sm=\"4\" lg=\"4\">\n            {this.state.didRunning\n              ? <Widget02 header=\"DID\" mainText=\"Running\" icon={didLogo} color=\"success\" variant=\"1\" />\n              : <Widget02 header=\"DID\" mainText=\"Stopped\" icon={didLogo} color=\"danger\" variant=\"1\" />\n            }\n          </Col>\n        </Row>\n\n        <CardGroup className=\"mb-4\">\n          <Widget04 icon=\"fa fa-gears\" header={this.state.blockheightDid} >Best block</Widget04>\n          <Widget04 icon=\"fa fa-clock-o\" header={this.state.blocktimeDid} >Block Time</Widget04>\n          <Widget04 icon=\"fa fa-hashtag\" header={this.state.blockhashDid} >Block Hash</Widget04>\n          <Widget04 icon=\"fa fa-gears\" header={this.state.minerDid}>MINER</Widget04>\n        </CardGroup>\n\n        <Row>\n          <Col xs=\"12\" sm=\"6\" lg=\"6 \">\n            <Card className=\"text-white\" style={{ backgroundColor: '#272A3D' }}>\n              <CardBody className=\"pb-0\">\n                <div>Transactions per block</div>\n                <div className=\"text-value\">{this.state.latestNbOfTxDid}</div>\n              </CardBody>\n              <div className=\"chart-wrapper mx-3\" style={{ height: \"70px\" }}>\n                <Line\n                  data={cardChartData4}\n                  options={cardChartOpts4}\n                  height={70}\n                />\n              </div>\n            </Card>\n          </Col>\n\n          <Col xs=\"12\" sm=\"6\" lg=\"6\">\n            <Card className=\"text-white\" style={{ backgroundColor: '#272A3D' }}>\n              <CardBody className=\"pb-0\">\n                <ButtonGroup className=\"float-right\">\n                </ButtonGroup>\n                <div>Latest block size</div>\n                <div className=\"text-value\">{this.state.latestSizeDid}</div>\n                {/* <div>Latest block sizes</div> */}\n              </CardBody>\n              <div className=\"chart-wrapper mx-3\" style={{ height: \"70px\" }}>\n                <Line\n                  data={cardChartData3}\n                  options={cardChartOpts3}\n                  height={70}\n                />\n              </div>\n            </Card>\n          </Col>\n        </Row>\n\n        <Row style={{ paddingTop: '50px' }}>\n          <Col xs=\"12\" sm=\"4\" lg=\"4\">\n            {this.state.carrierRunning\n              ? <Widget02 header=\"Carrier\" mainText=\"Running\" icon={carrierLogo} color=\"success\" variant=\"1\" />\n              : <Widget02 header=\"Carrier\" mainText=\"Stopped\" icon={carrierLogo} color=\"danger\" variant=\"1\" />\n            }\n          </Col>\n        </Row>\n\n        <CardGroup className=\"mb-4\">\n          <Widget04 icon=\"fa fa-gears\" header={this.state.carrierIp} >Carrier IP Address</Widget04>\n        </CardGroup>\n      </div>\n    )\n  }\n}\n\nexport default Dashboard;"],"sourceRoot":""}