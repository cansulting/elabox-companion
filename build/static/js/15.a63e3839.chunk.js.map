{"version":3,"sources":["views/Auth.js"],"names":["Companion","React","lazy","Login","PrivateRoute","children","rest","isAuth","localStorage","getItem","render","location","to","pathname","state","from","Auth","Suspense","fallback","className","path"],"mappings":"2JASMA,EAAYC,IAAMC,MAAK,kBAAM,wDAC7BC,EAAQF,IAAMC,MAAK,kBAAM,iCAyC/B,SAASE,EAAT,GAA8C,IAAtBC,EAAqB,EAArBA,SAAaC,EAAQ,4BACrCC,EAASC,aAAaC,QAAQ,WACpC,OACE,kBAAC,IAAD,iBACMH,EADN,CAEEI,OAAQ,gBAAGC,EAAH,EAAGA,SAAH,MACI,QAAVJ,EAEIF,EAIA,kBAAC,IAAD,CACEO,GAAI,CACFC,SAAU,SACVC,MAAO,CAAEC,KAAMJ,UAUhBK,UAhEf,WAmBE,OACE,kBAAC,IAAD,KACE,6BACE,kBAAC,IAAMC,SAAP,CAAgBC,SA1BF,yBAAKC,UAAU,oCAAf,eA2BZ,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOC,KAAK,UACV,kBAACjB,EAAD,OAEF,kBAACC,EAAD,CAAcgB,KAAK,KACjB,kBAACpB,EAAD","file":"static/js/15.a63e3839.chunk.js","sourcesContent":["import React, { useEffect } from \"react\";\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Redirect,\n} from \"react-router-dom\";\n\nconst loading = () => <div className=\"animated fadeIn pt-3 text-center\">Loading...</div>;\nconst Companion = React.lazy(() => import('./Companion'));\nconst Login = React.lazy(() => import('./Login'));\n\nfunction Auth() {\n\n  // useEffect(() => {\n  //   // Your code here\n  //   fetch(\"http://elabox.local:3001/checkInstallation\")\n  //       .then(response => response.json())\n  //       .then(responseJson => {\n  //         localStorage.setItem('isconfiged', responseJson.stdout.trim())\n  //         console.log(\"hhhhh\")\n  //         return (\n  //           <Redirect\n  //             to={{\n  //               pathname: \"/config1\"\n  //             }}\n  //           />\n  //         )\n  //       })\n  // }, []);\n\n  return (\n    <Router>\n      <div>\n        <React.Suspense fallback={loading()}>\n          <Switch>\n            <Route path=\"/login\">\n              <Login />\n            </Route>\n            <PrivateRoute path=\"/\">\n              <Companion />\n            </PrivateRoute>\n          </Switch>\n        </React.Suspense>\n      </div>\n    </Router>\n  );\n}\n\n// A wrapper for <Route> that redirects to the login\n// screen if you're not yet authenticated.\nfunction PrivateRoute({ children, ...rest }) {\n  const isAuth = localStorage.getItem('logedin')\n  return (\n    <Route\n      {...rest}\n      render={({ location }) =>\n        isAuth == 'true' ?\n          (\n            children\n          )\n          :\n          (\n            <Redirect\n              to={{\n                pathname: \"/login\",\n                state: { from: location }\n              }}\n            />\n          )\n      }\n\n    />\n  );\n}\n\nexport default Auth;"],"sourceRoot":""}